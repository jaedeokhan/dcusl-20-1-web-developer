자바에서 데이터베이스 작업의 순서.
1. 드라이버 파일을 클래스패스에 복사한다.
   - 드라이버 파일을 읽어야 사용할 수 있다. (ojdbc)

2. java.sql 패키지의 API들을 import한다.

3. 메모리에 데이터베이스 드라이버를 로딩한다.

4. Connection 객체 생성
   - Connection : 데이터베이스와 연결을 하는 역할

5. Statement 객체 생성
   - Statement : SQL 구문을 데이터베이스 전송하는 역할을 한다.
   
5-1. int executeUpdate(String sql){}
   - SELECT 구문을 제외한 INSERT, UPDATE, DELETE 등의 SQL 구문을 실행할 때 사용하는 메소드
   - SQL 구문을 실행한 후 적용된 행수를 반환해주는 메소드이다.
   
5-2. Select 구문은 executeUpdate말고 다른 메소드를 사용해줘야한다.
   - ResultSet executeQuery(Stirng sql){} : SELECT 구문을 실행하는 메소드이다.
   - ResultSet : SELECT 구문이 실행되고 나서 반환되는 레코드셋(레코드덩어리)를 참조하는 인터페이스   
   - 처음에 ResultSet이 참조하는 라니은 레코드셋의 top부분임, 즉, 실제 레코드가 있는 부분은 아니다. 속성을 가르킨다.
      - 그래서, 작업하는 라인을 value가 있는 라인으로 이동을 시켜야 한다.
      
5-2-1. ResultSet의 메소드
   - boolean next() : 현재 작업할 커서의 위치를 다음레코드(다음라인)으로 이동시킨다. 
      - 다음에 이동할 레코드가 있다면 true를 반환
      - 더 이상 이동할 레코드가 없다면 false!      

5-2-2. 해당 레코드에 특정 컬럼의 값을 조회하는 메소드
   - String getString(int columnNumber){} : 인자로 지정된 번호의 컬럼의 값을 반환 
      - String name = rs.getString(1); // 1은 첫 번째 칼럼인 id를 나타낸다.
   - String getString(String columnName){} : 인자로 지정된 이름의 컬럼 값을 반환 
      - String name = rs.getString("id");