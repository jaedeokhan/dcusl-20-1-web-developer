package _0423THU;

import java.util.Scanner;

public class ClassEx {
	// 멤버 변수 = 전역 변수와 유사
	int a;
	String s;
	
	// 요 놈은 생성자, 객체가 생성되어질때 자동으로 생성이 된다.
	ClassEx(){
		a = 10;
		s = "A";
		System.out.println("생성자 실행" + a + s);
	}
	
	
	public static void main(String[] args) {
		ClassEx a = new ClassEx();
		
		/*
		 -클래스(class)
		  	객체를 정의해 놓은 것 -> 객체를 생성하기위한 템플릿(template)
		  	객체의 구성 및 생성에 쓰임.
		 
		 -객체(object)
		 	실생활에 존재하는 것들을 모두 표현함.
		 	속성(특성)과 기능으로 구성.
		 	
		 - 객체지향이란 :
		 	사물이란 개념을 "속성과 기능을 가진 객체"로 모델링하고, 이들간의 관계를 정의함.
		 	(Self-contained Component 스스로 존재하는 자)
		 	
		 - 자바에서의 객체지향 3단계
		 1) 객체 모델링 - 프로그래밍 하고자 하는 객체의 속성과 필요한 기능을 정리한다.
		 2) 클래스 정의 - 객체를 실제로 사용하기 위해서, 클래스라는 형태로 객체를 표현한다.
		 3) 객체 생성과 사용 - 정의된 클래스를 이용해서, 메모리상에서 객체(Object)를 생성하고, 사용한다.	
		 
		 - 생성자(constructor)
객체지향 프로그래밍(OOP)에 쓰이는 객체 초기화 함수
		 	객체의 생성 시에만 호출되어 메모리 생성과 동시에 객체의 데이터를 초기화하는 역할을 함.
		 	자바는 c외는 달리 소멸자가 없다. 소멸자가 없으면 메모리 회수를 하지 못한다. 이것을 어떻게 극복하나?
		 	1) 생성자의 이름은 클래스의 이름과 동일하게 사용.
		 	2) 오버로딩 (overlooding) 가능함.
		 	3) 반환형을 사용하지 않음.
		 	4) 기본 생성자의 개념이 존재함.
		 	5) 멤버 변수 초기화 역할을 가짐.
		 - Java에서 소멸자란? => garbage collection
		 
		 - 클래스 표현 방법
		 [접근제어자] class 클래스명 {
		 	변수, 생성자, 메소드를 정의함.
		 	}
		 	
		 - 객체  표현하는 방법 :
		  // new라는게 메모리를 사용한다는 개념이랑 비슷하다.
		  [참조형] 참조 변수명 = new [클래스명]();
		 */		
		
		
		
	}
}